// Generated by CoffeeScript 1.6.2
(function() {
  var minimatch;

  minimatch = require('minimatch');

  $(function() {
    var $window, filter, filterMatches, input, matches, processMatches, results, source;

    input = $('#minimatch');
    source = $('#source');
    results = $('.right');
    matches = $('.matches', results);
    filter = $('#filter');
    processMatches = _.debounce(function() {
      var line, match, matched, ul, val, _i, _j, _len, _len1, _ref;

      matched = [];
      val = input.val();
      _ref = source.val().split('\n');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        line = _ref[_i];
        if (minimatch(line, val)) {
          matched.push(line);
        }
      }
      if (matched.length) {
        ul = $('<ul></ul>');
        for (_j = 0, _len1 = matched.length; _j < _len1; _j++) {
          match = matched[_j];
          ul.append("<li>" + match + "</li>");
        }
      } else {
        ul = $('<ul><li>0 matches</li></ul>');
      }
      matches.html(ul);
      return true;
    }, 150);
    filterMatches = _.debounce(function() {
      var contents, filterRe, filterText, li, lis, toHide, toShow, _i, _len;

      filterText = filter.val();
      lis = matches.find('li');
      if (filterText === '') {
        $(lis).show();
        return;
      }
      filterRe = new RegExp(".*" + filterText + ".*", 'gi');
      toHide = [];
      toShow = [];
      for (_i = 0, _len = lis.length; _i < _len; _i++) {
        li = lis[_i];
        contents = $(li).html();
        if (filterRe.test(contents)) {
          toShow.push(li);
        } else {
          toHide.push(li);
        }
      }
      $(toShow).show();
      return $(toHide).hide();
    }, 150);
    input.on('keyup', processMatches);
    source.on('keyup', processMatches);
    filter.on('keyup', filterMatches);
    $window = $(window);
    return $window.resize(function() {
      var inputHeight, wH, wW;

      wW = $window.width();
      wH = $window.height();
      inputHeight = input.height() + 4;
      input.width(wW - 24);
      source.width(Math.floor(wW / 2) - 27);
      source.height(wH - 72 - inputHeight);
      results.width(Math.floor(wW / 2) - 17);
      results.height(wH - 62 - inputHeight);
      return true;
    }).resize();
  });

}).call(this);
